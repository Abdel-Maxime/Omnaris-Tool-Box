---
import { languages, getLangFromUrl, getLocalizedPathname } from '../i18n/utils';

const currentLang = getLangFromUrl(Astro.url);
const currentPath = Astro.url.pathname;
---

<div class="relative">
  <button 
    id="language-toggle"
    class="flex items-center gap-2 px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary"
    aria-label="Select language"
  >
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
    </svg>
    <span>{languages[currentLang as keyof typeof languages]}</span>
    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>
  
  <div 
    id="language-menu"
    class="absolute right-0 mt-2 w-40 bg-white border border-gray-200 rounded-md shadow-lg hidden z-50"
  >
    {Object.entries(languages).map(([lang, label]) => {
      const localizedPath = getLocalizedPathname(currentPath, lang);
      return (
        <a
          href={localizedPath}
          class={`block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 ${
            lang === currentLang ? 'bg-gray-50 font-medium' : ''
          }`}
        >
          {label}
        </a>
      );
    })}
  </div>
</div>

<script>
  const toggle = document.getElementById('language-toggle');
  const menu = document.getElementById('language-menu');
  
  if (toggle && menu) {
    toggle.addEventListener('click', () => {
      menu.classList.toggle('hidden');
    });
    
    // Fermer le menu en cliquant ailleurs
    document.addEventListener('click', (e) => {
      if (!toggle.contains(e.target as Node) && !menu.contains(e.target as Node)) {
        menu.classList.add('hidden');
      }
    });
  }
</script>